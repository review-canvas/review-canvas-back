plugins {
    id 'java-library'
    id 'jacoco'
    id 'checkstyle'
    id 'org.ec4j.editorconfig' version "${editorconfigVersion}"
    id 'com.google.cloud.tools.jib' version "${jibVersion}"
    id 'org.sonarqube' version "${sonarqubeVersion}"
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

allprojects {
    group = "${projectGroup}"
    version = "${applicationVersion}"
    sourceCompatibility = "${javaVersion}"

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'checkstyle'
    apply plugin: 'java-library'
    apply plugin: 'org.sonarqube'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    apply from: "${rootDir}/config/editorconfig/editorconfig.gradle"
    apply from: "${rootDir}/config/jacoco/jacoco.gradle"
    apply from: "${rootDir}/config/checkstyle/checkstyle.gradle"

    dependencies {
        implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.4'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.4'
        implementation 'org.slf4j:slf4j-api'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    bootJar.enabled = false
    jar.enabled = true


    tasks.named('test') {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    // sonar
    sonar {
        properties {
            property 'sonar.java.checkstyle.reportPaths', project.layout.buildDirectory.asFile.get().absolutePath + '/reports/checkstyle/main.xml'
            property 'sonar.coverage.jacoco.xmlReportPaths', project.layout.buildDirectory.asFile.get().absolutePath + '/reports/jacoco/test/jacocoTestReport.xml'
        }
    }
}

bootJar.enabled = false
jar.enabled = false

// sonar
sonar {
    properties {
        property 'sonar.projectKey', 'review-canvas_review-canvas-back'
        property 'sonar.organization', 'review-canvas'
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.language', 'java'
        property 'sonar.sourceEncoding', 'UTF-8'
        property 'sonar.java.coveragePlugin', 'jacoco'
    }
}

// jib
jib {
    from {
        image = "eclipse-temurin:17-jre"

        platforms {
            platform {
                architecture = "arm64"
                os = "linux"
            }
        }
    }
    to {
        image = "aws_account_id.dkr.ecr.region.amazonaws.com/${project.name}"
        tags = ["latest", "${project.version.toString()}"]
    }
    container {
        jvmFlags = ['-Dspring.profiles.active=local', '-XX:+UseContainerSupport']
        ports = ['8080']
    }
}
